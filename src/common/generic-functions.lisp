(in-package :blog)

(define-method-combination with-start ()
         ((around (:around))
          (before (:before))
          (start (:start))
          (primary () :required t)
          (after (:after)))
   (flet ((call-methods (methods)
            (mapcar #'(lambda (method)
                        `(call-method ,method))
                    methods)))
     (let ((form (if (or before after (rest primary) start)
                     `(multiple-value-prog1
                        (progn ,@(call-methods before)
                               (call-method ,(first start)
                                            ,(append (rest start) primary)))
                        ,@(call-methods (reverse after)))
                     `(call-method ,(first primary)))))
       (if around
           `(call-method ,(first around)
                         (,@(rest around)
                          (make-method ,form)))
           form))))


(define-method-combination reverse-append ()
  ((primary () :required t))
  (if (endp (cdr primary))
      `(the list (call-method (car primary)))
      (cons 'append (mapcar #'(lambda (method) `(the list (call-method ,method)))
                            (reverse primary)))))


(define-method-combination stringify
    :operator stringify
    :identity-with-one-argument t)

(defgeneric generate-page-from (generator object)
  (:method-combination with-start))
(defgeneric to-html (p rules))
(defgeneric edited-before (a b))
(defgeneric created-before (a b))
(defgeneric add-post (blog-main new-entry))
(defgeneric remove-post (container id))
(defgeneric sort-content (container))
(defgeneric get-post (blog id))
(defgeneric get-page (object identifer))
(defgeneric get-most-recent-posts (blog count))
(defgeneric new-category (id blog))
(defgeneric get-category (blog id))
(defgeneric get-style (generator)
  (:method-combination stringify))
(defgeneric set-cached-html (page value))
(defgeneric reset-cache (object))
(defgeneric get-menu (generator))
(defgeneric update-timestamp (object))
(defgeneric get-menu-list (generator object)
  (:method-combination append))
